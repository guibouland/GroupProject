---
title: "Lien météorologique"
execute: 
  echo: false
format:
  html:
    toc: true
    grid:
      margin-width: 175px
---

# Etude de la concentration de la pollution à Toulouse

Toutes les données ont été mesurées entre le 01/10/2022 et le 30/09/2023 et proviennent de [SYNOP data](https://public.opendatasoft.com/explore/dataset/donnees-synop-essentielles-omm/api/?sort=date) pour les données météorologiques et de [Atmo Occitanie](https://data-atmo-occitanie.opendata.arcgis.com/pages/liste-des-flux) pour les données des polluants.

On étudie dans un premier temps la variation des moyennes des concentrations des polluants par mois puis par jour dans une période d'un an dans la ville de Toulouse.
Ensuite, On essaie de mettre en évidence un lien entre différents facteurs météorologiques et certains polluants.

## Concentration mensuelle de pollution sur une année

```{python}
import sys
sys.path.append('../')
from modules import meteo as md
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

"""CONCENTRATION POLLUTION"""

"""
DONNEES
"""

# Importer les données
polluants = pd.read_csv("../bases_de_donnees/donnees_polluants_2022_2023_Toulouse.csv",
                        sep=",", na_values="", low_memory=False)

# Extraire le mois de chaque date
polluants['Date'] = pd.to_datetime(polluants['date_debut'])

# Extraire les lignes correspondant au mois de mars
polluants_mars = polluants[polluants['Date'].dt.month == 3].copy()

# Définir les polluants
liste_polluants = ['PM10', 'O3', 'NOX', 'NO2', 'PM2.5', 'NO']

# Définir les couleurs correspondantes
couleur = ['orange', 'green', 'purple', 'red', 'blue', 'grey']

# Dictionnaire de correspondance entre les anciens et les nouveaux noms des mois/jours
nom_mois = {"01": "Janvier", "02": "Février", "03": "Mars", "04": "Avril", "05": "Mai", "06": "Juin",
                "07": "Juillet", "08": "Août", "09": "Septembre", "10": "Octobre", "11": "Novembre", "12": "Décembre"}
nom_jours = {"Monday": "Lundi", "Tuesday": "Mardi", "Wednesday": "Mercredi",
                 "Thursday": "Jeudi", "Friday": "Vendredi", "Saturday": "Samedi", "Sunday": "Dimanche"}


def concentration(date, format, nom_date, titre, temps):
    """Traitement des polluants exclusivement"""

    """
    DONNEES
    """

    # Formatage des dates
    polluants[date] = polluants['Date'].dt.strftime(format)

    # Moyenne des valeurs de chaque polluant par date
    resultat = []

    for polluant in liste_polluants:
        df_polluant = (
            polluants[polluants["nom_poll"] == polluant]
            .groupby(date)["valeur"].mean().reset_index()
        )
        # Ajout de la colonne éponyme pour la sélectionner individuellement
        df_polluant["nom"] = polluant
        if date == "Jour":
            # Trier par date et la renommer
            df_polluant["Jour"] = pd.Categorical(
                df_polluant["Jour"],
                categories=[
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                    "Sunday",
                ],
                ordered=True,
            )
            df_polluant = df_polluant.sort_values(date)
        # Renommer la date
        df_polluant[date] = df_polluant[date].replace(nom_date)
        resultat.append(df_polluant)

    # Récupérer les DataFrames individuels
    PM10, O3, NOX, NO2, PM2, NO = resultat

    # Concaténer tous les polluants dans resultat
    resultat = pd.concat([NOX, NO2, NO, O3, PM10, PM2], ignore_index=True)

    """
    GRAPHIQUE
    """

    # Paramétrer le graphique polaire
    fig_polar = px.line_polar(
        resultat,
        r="valeur",
        theta=date,
        color="nom",
        line_close=True,
        range_r=[0, max(resultat["valeur"])],
        start_angle=90,
        color_discrete_sequence=couleur,
        title=titre
    )
    md.graphique_polar(fig_polar)

    # Paramétrer le graphique cartésien
    fig = go.Figure()

    md.graphique(fig, titre, temps)

    # Ajouter les traces pour chaque polluant
    fig.add_trace(md.trace(NOX, 'orange', 'NOx', date))
    fig.add_trace(md.trace(NO2, 'green', 'NO₂', date))
    fig.add_trace(md.trace(NO, 'purple', 'NO', date))
    fig.add_trace(md.trace(O3, 'red', 'O₃', date))
    fig.add_trace(md.trace(PM10, 'blue', 'PM10', date))
    fig.add_trace(md.trace(PM2, 'grey', 'PM2.5', date))

    # Afficher les graphiques
    fig_polar.show()
    fig.show()


# Graphique mois
concentration('Mois', '%m', nom_mois,
              'Concentration moyenne mensuelle des polluants (en µg.m⁻³)', 'Temps (mois)')

```
<br>
On remarque que la concentration d'oxydes d'azote (NOx, NO₂ et NO) est très faible au mois d'Août (33.9 µg.m⁻³ de NOx par exemple) puis ne cesse d'augmenter jusqu'à Décembre (99.0 µg.m⁻³ de NOx), elle se maintient pendant l'hiver jusqu'à Février (94.0 µg.m⁻³ de NOx) pour nettement diminuer jusqu'à l'été. <br>
Cela peut être dû à plusieurs facteurs aussi bien causés directement par l'Homme (augmentation du chauffage, de la prise de véhicules, etc...) qu'indirectement via transformations chimiques naturelles (le froid engendre une augmentation des rejets automobiles, une formation de particules fines par les cheminées, etc...).<br>
<br>
A contrario, la tendance est inversée concernant l'émission d'ozone (O₃) qui est stable mais importante entre Mars et Septembre (entre 59.3 et 70.9 µg.m⁻³) alors qu'elle est plus faible entre Octobre et Février (entre 37.7 et 51.3 µg.m⁻³ avec une baisse soudaine à 26.6 µg.m⁻³ en Décembre). <br>
Cela peut s'expliquer par la dépendance de la formation de l'ozone à l'ensoleillement et à la température qui varient selon les saisons et par conséquent régulent les transformations chimiques produisant le-dit polluant.<br>
<br>
Concernant les particules en suspension, elles ont toutes deux en moyenne les mêmes variations mais celles-ci sont a priori trop faibles pour en déduire une influence particulière.

## Concentration quotidienne de pollution sur une année

```{python}
# Graphique jour
concentration('Jour', '%A', nom_jours,
              'Concentration moyenne quotidienne des polluants (en µg.m⁻³)', 'Temps (jours)')
```
<br>
On remarque que les concentrations d'oxydes d'azote sont stables en semaine (entre 57.9 et 66.7 µg.m⁻³ de NOx par exemple) mais diminuent soudainement le week end (52.7 µg.m⁻³ de NOx le Samedi puis 40.6 µg.m⁻³ le Dimanche). Ceci est probablement dû au fait qu'en majorité les gens ne travaillent pas ou moins le week end.<br>
<br>
La concentration d'ozone est quant à elle très stable variant entre 52.3 et 57.8 µg.m⁻³ toute la semaine. Ceci s'explique par le fait que l'ensoleillement et la température varient de façon similaire tous les jours (il ne fait pas plus chaud le lundi en particulier par exemple). De même, les concentrations des particules en suspension varient peu (entre 16.5 et 19.4 µg.m⁻³ pour les particules PM10 et entre 9.3 et 10.3 µg.m⁻³ pour celles PM2.5).

## Lien entre le vent et la concentration de pollution

```{python}
"""LIEN VENTS/POLLUANTS"""

"""
DONNEES
"""

# Importer les valeurs
donnees = pd.read_csv("../bases_de_donnees/donnees_meteo_2022_2023_Toulouse.csv",
                      sep=";", na_values="", low_memory=False)

# Formater les dates
donnees["Date"] = donnees["Date"].apply(lambda x: x.split("T")[0])
donnees['Date'] = pd.to_datetime(donnees['Date'])

# Extraire les lignes correspondant au mois de mars
# Créer une copie pour éviter les problèmes de vue
donnees_mars = donnees[donnees['Date'].dt.month == 3].copy()

# Renommer colonnes
donnees.rename(columns={'Température': "valeur"}, inplace=True)
donnees_mars.rename(
    columns={"Vitesse du vent moyen 10 mn": "valeur"}, inplace=True)

"""
VENT
"""

# Vitesse moyenne du vent chaque jour de la période
vent = donnees_mars.groupby('Date')['valeur'].mean().reset_index()

# Conversion en km/h
vent['valeur'] = vent['valeur'].multiply(3.6)


"""
POLLUANTS
"""

# Moyenne des valeurs des polluants par jour
NOX = polluants_mars[(polluants_mars['nom_poll'] == 'NOX')].groupby('Date')["valeur"].mean().reset_index()
NO2 = polluants_mars[(polluants_mars['nom_poll'] == 'NO2')].groupby('Date')["valeur"].mean().reset_index()
NO = polluants_mars[(polluants_mars['nom_poll'] == 'NO')].groupby('Date')["valeur"].mean().reset_index()
O3 = polluants_mars[(polluants_mars['nom_poll'] == 'O3')].groupby('Date')["valeur"].mean().reset_index()

"""
GRAPHIQUE
"""

# Ajouter la trace pour le vecteur vent sur le deuxième axe Y
trace_vent = go.Scatter(x=vent["Date"], y=vent["valeur"], mode='lines', line=dict(
    width=2, color='pink'), name='Vent', yaxis='y2')

# Créer la figure
fig = go.Figure([trace_vent])

# Ajouter les courbes
fig.add_trace(md.trace(NOX, 'orange', 'NOx', "Date"))
fig.add_trace(md.trace(NO2, 'green', 'NO₂', "Date"))
fig.add_trace(md.trace(NO, 'purple', 'NO', "Date"))
fig.add_trace(md.trace(O3, 'red', 'O₃', "Date"))

md.graphique_axe(
    fig, "Vitesse du vent et émissions d'oxydes d'azote (mars 2023)", 'Vitesse (km.h⁻¹)')

# Afficher le graphique
fig.show()
```
<br>
On remarque nettement un lien de causalité entre la vitesse du vent et la concentration des polluants.<br>
En effet à chaque pic de vitesse du vent, la concentration des tous les polluants chute et de la même manière, quand la vitesse du vent est faible, la concentration des polluants augmente drastiquement.<br>
On pourra également remarquer une corrélation positive entre la vitesse du vent et la concentration d'ozone puisque leur sens de variation sont sensiblement les mêmes.

## Lien entre la température et la concentration d'ozone

```{python}
"""LIEN TEMPERATURE/OZONE"""

"""
DONNEES
"""

"""
TEMPERATURE
"""

# température moyenne chaque jour de la période
temp_moy = donnees.groupby('Date')['valeur'].mean().reset_index()

"""
POLLUANTS
"""

# Extraire la date sans l'heure de 'date_debut'
polluants['Date'] = pd.to_datetime(polluants['date_debut'])

# Moyenne des valeurs des polluants par jour
O3 = polluants[(polluants['nom_poll'] == 'O3')].groupby('Date')["valeur"].mean().reset_index()

"""
GRAPHIQUE
"""

# Ajouter la trace pour le vecteur vent sur le deuxième axe Y
trace_temp_moy = go.Scatter(x=temp_moy["Date"], y=temp_moy["valeur"], mode='lines', line=dict(
    width=2, color='purple'), name='Température', yaxis='y2')

# Créer la figure
fig = go.Figure([trace_temp_moy])
fig.add_trace(md.trace(O3, 'orange', 'O₃', "Date"))
md.graphique_axe(fig, "Température et concentration d'ozone",
                 'Température (°C)')

# Afficher le graphique
fig.show()

```
<br>
On pourra noter un lien de corrélation positif entre la température et la concentration d'ozone bien qu'il reste indirect, puisque le facteur causal influençant les deux données est le rayonnement solaire.<br>
L'indice UV aurait donc été une donnée plus pertinente à comparer que la température mais elle n'est pas disponible dans les données recueillies.