[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "La pollution en Occitanie",
    "section": "",
    "text": "Make this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "À propos",
    "section": "",
    "text": "About this site\nCréé pour un projet de groupe\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html#carte-de-loccitanie",
    "href": "index.html#carte-de-loccitanie",
    "title": "La pollution en Occitanie",
    "section": "",
    "text": "Make this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "Departements/Tarn.html",
    "href": "Departements/Tarn.html",
    "title": "Tarn",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Pyrenees-Orientales.html",
    "href": "Departements/Pyrenees-Orientales.html",
    "title": "Pyrénées-Orientales",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Lot.html",
    "href": "Departements/Lot.html",
    "title": "Lot",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Hautes-Pyrenees.html",
    "href": "Departements/Hautes-Pyrenees.html",
    "title": "Hautes-Pyrénées",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Gers.html",
    "href": "Departements/Gers.html",
    "title": "Gers",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Aveyron.html",
    "href": "Departements/Aveyron.html",
    "title": "Aveyron",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Ariege.html",
    "href": "Departements/Ariege.html",
    "title": "Ariège",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Avancee.html",
    "href": "Avancee.html",
    "title": "Avancées",
    "section": "",
    "text": "gantt\n        dateFormat YYYY-MM-DD\n        title Diagramme de Gantt pour les avancées du projet\n        \n        %% Ceci est provisoire\n        section Pierre\n            familiatisation avec quarto  : done,     2023-10-01, 2023-10-07\n            création de l'ébauche du site : done,   2023-10-07, 2023-10-14\n            Programmation : active,         2023-10-23, 2023-12-10\n            Aspect interactif de la carte : crit,         2023-10-14, 2023-12-10\n            Rendre la carte cliquable par departements : crit,  2023-10-14, 2023-10-28\n            Pollution sur les cartes selon légende : crit, 2023-10-28, 2023-11-18\n            \n        section Guillaume\n            Recherche concernant le projet  : done,     2023-10-01, 2023-10-23\n            Programmation : active,         2023-10-23, 2023-12-10\n            Elaboration du site : crit,         2023-10-23, 2023-12-10\n            \n        section Maxence\n            Recherche concernant le projet : done,     2023-10-01, 2023-10-23\n            Programmation : active,         2023-10-23, 2023-12-10\n            Création des classes : crit,         2023-10-23, 2023-11-10\n            \n        section Quentin\n            Recherche concernant le projet : done,     2023-10-01, 2023-10-23\n            Programmation : active,         2023-10-23, 2023-12-10\n            Sélection des données : crit,         2023-10-23, 2023-11-10\n            Utilisation/interprétation des données : crit,         2023-11-10, 2023-12-10\n        section Groupe\n            Préparation de la presentation orale avec slides sur Quarto : crit, 2023-11-18, 2023-12-10\n        \n        section Evaluation\n            Présentation projet : active, milestone,     2023-10-23, 2023-10-23\n            Dépôt projet : milestone,     2023-12-10, 2023-12-10\n            Présentation orale : milestone,     2023-12-15, 2023-12-15\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Departements/Aude.html",
    "href": "Departements/Aude.html",
    "title": "Aude",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Gard.html",
    "href": "Departements/Gard.html",
    "title": "Gard",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Haute-Garonne.html",
    "href": "Departements/Haute-Garonne.html",
    "title": "Haute-Garonne",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Herault.html",
    "href": "Departements/Herault.html",
    "title": "Hérault",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Lozere.html",
    "href": "Departements/Lozere.html",
    "title": "Lozère",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Departements/Tarn-et-Garonne.html",
    "href": "Departements/Tarn-et-Garonne.html",
    "title": "Tarn-et-Garonne",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "villes.html",
    "href": "villes.html",
    "title": "Villes",
    "section": "",
    "text": "Comparatifs entre grandes villes et petites villes\n\n\n\n\n Back to top"
  },
  {
    "objectID": "meteo.html",
    "href": "meteo.html",
    "title": "Lien météo",
    "section": "",
    "text": "Taux mensuel de pollution sur une année\n\n\n\n                                                \n\n\n\n\nTaux quotidien de pollution sur une année\n\n\n\n                                                \n\n\n\n\nLien entre le vent et le taux de pollution\n\n\n\n                                                \n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "villes/villes.html",
    "href": "villes/villes.html",
    "title": "Villes",
    "section": "",
    "text": "# %%\nfrom dash import Dash, html, dcc, Input, Output, callback\nimport pandas as pd\nimport plotly.express as px\nimport seaborn as sns\n\n# On applique une palette de couleur \"colorblind\"\nsns.set_palette(\"colorblind\")\n# %% LOADING DATA\n\n# On charge le csv dasn un dataframe pandas\ndf = pd.read_csv(\"../bases_de_donnees/Mesure_mensuelle_annee.csv\")\n\n# On supprime les lignes qui ne comprtent aucunes valeurs\ndf = df.dropna()\n\n# On convertie la colonne \"date_debut\" en format datetime\ndf[\"date_debut\"] = pd.to_datetime(df[\"date_debut\"], format=\"%Y/%m/%d %H:%M:%S+%f\")\n\n# On crée une nouvelle colonne \"mois-annee\" au format datetime\ndf[\"mois_annee\"] = df[\"date_debut\"].dt.strftime(\"%Y/%m\")\n\n# %% OCCURENCES DES VILLES\n\n# Extraction de la colonne des villes\nvilles = df[\"nom_com\"]\n\n# On regarde les occurences des villes pour faire un choix\nocc_villes = villes.value_counts()\n\n# Affichage de la liste des villes uniques\n# print(occ_villes)\n\n# %% AIDE AU CHOIX DES VILLES ET STATIONS\n\"\"\"\nPermet de voir les différentes stations puis celles qui ont été supprimées pendant le dorpna()\n\ndf_copie = df.copy()\nvilles_choisies = [\n    \"TOULOUSE\",\n    \"MONTPELLIER\",\n    \"TARBES\",\n    \"MONTAUBAN\",\n    \"PEYRUSSE-VIEILLE\",\n    \"ARGELES-GAZOST\",\n]\n\n# Boucle pour itérer sur chaque ville\nfor ville in villes_choisies:\n    df_ville = df[df[\"nom_com\"] == ville]\n    occurrences_stations = df_ville[\"nom_station\"].value_counts()\n    print(f\"Occurrences des stations pour la ville {ville} :\")\n    print(occurrences_stations)\n    print(\"\\n\" + \"=\" * 30 + \"\\n\")\n\ndf_filtre = df_copie[df_copie[\"nom_com\"].isin(villes_choisies)]\n\n# Supprimer les lignes avec des valeurs manquantes dans le DataFrame filtré\ndf_filtre = df_filtre.dropna()\n\n# Les lignes supprimées se trouvent dans df_copie, qui contient toutes les lignes du fichier d'origine\nlignes_supprimees = df_copie.loc[~df_copie.index.isin(df_filtre.index)]\nlignes_supprimees.to_csv(\"lignes_supprimees.csv\", index=False)\n\ndf2 = pd.read_csv(\"lignes_supprimees.csv\")\nvilles_choisies = [\n    \"TOULOUSE\",\n    \"MONTPELLIER\",\n    \"TARBES\",\n    \"MONTAUBAN\",\n    \"PEYRUSSE-VIEILLE\",\n    \"ARGELES-GAZOST\",\n]\n\n# Boucle pour itérer sur chaque ville\nfor ville in villes_choisies:\n    df2_ville = df2[df2[\"nom_com\"] == ville]\n    occurrences_stations = df2_ville[\"nom_station\"].value_counts()\n    print(f\"Occurrences des stations pour la ville {ville} :\")\n    print(occurrences_stations)\n    print(\"\\n\" + \"=\" * 30 + \"\\n\")\n\"\"\"\n\n# %%\napp = Dash(__name__)\n\napp.layout = html.Div(\n    [\n        html.H1(\"Différences intra-villes\"),\n        # Sélection de la ville\n        dcc.Dropdown(\n            id=\"ville\",\n            options=[\n                {\"label\": \"Toulouse\", \"value\": \"TOULOUSE\"},\n                {\"label\": \"Montpellier\", \"value\": \"MONTPELLIER\"},\n            ],\n            value=\"TOULOUSE\",\n        ),\n        # Sélection du polluant\n        dcc.Dropdown(\n            id=\"polluant\",\n            options=[\n                {\"label\": \"NO\", \"value\": \"NO\"},\n                {\"label\": \"NO2\", \"value\": \"NO2\"},\n                {\"label\": \"NOX\", \"value\": \"NOX\"},\n                {\"label\": \"O3\", \"value\": \"O3\"},\n                {\"label\": \"PM10\", \"value\": \"PM10\"},\n                {\"label\": \"PM2.5\", \"value\": \"PM2.5\"},\n            ],\n            value=\"NO\",\n        ),\n        # Graphique\n        dcc.Graph(id=\"graph\"),\n    ]\n)\n\n\n# Update graphe en fonction de la sélection\n@app.callback(\n    Output(\"graph\", \"figure\"), Input(\"ville\", \"value\"), Input(\"polluant\", \"value\")\n)\ndef update(select_ville, select_poll):\n    # On charge le csv dasn un dataframe pandas\n    df = pd.read_csv(\"../bases_de_donnees/Mesure_mensuelle_annee.csv\")\n\n    # On supprime les lignes qui ne comprtent aucunes valeurs\n    df = df.dropna()\n\n    # On convertie la colonne \"date_debut\" en format datetime\n    df[\"date_debut\"] = pd.to_datetime(df[\"date_debut\"], format=\"%Y/%m/%d %H:%M:%S+%f\")\n\n    # On crée une nouvelle colonne \"mois-annee\" au format datetime\n    df[\"mois_annee\"] = df[\"date_debut\"].dt.strftime(\"%Y/%m\")\n    data = df[(df[\"nom_com\"] == select_ville) & (df[\"nom_poll\"] == select_poll)]\n    data = data.sort_values(by=\"mois_annee\")\n\n    # Plot\n    fig = px.line(\n        data,\n        x=\"mois_annee\",\n        y=\"valeur\",\n        color=\"nom_station\",\n        markers=True,\n        labels={\"nom_station\": \"Station\", \"mois_annee\": \"Date\", \"valeur\": \"Valeur\"},\n    )\n\n    fig.update_layout(\n        title=f\"Différences de mesure pour {select_poll} à {select_ville}\",\n        xaxis_title=\"Date\",\n        yaxis_title=f\"Valeur de {select_poll} (µg/m³)\",\n    )\n\n    # Ajuster axe ordonnées\n    fig.update_yaxes(range=[0, data[\"valeur\"].max() + 5])\n\n    return fig\n\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n\n\n        \n        \n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "5ans/Evolution5ans.html",
    "href": "5ans/Evolution5ans.html",
    "title": "Pollution en Occitanie durant les 5 années précédentes",
    "section": "",
    "text": "Le graphique précédent nous permet d’observer la variation de quantité de chaque polluant en moyenne par an durant les 5 dernières années dans chaque département de l’Occitanie. Certains département proposent de nombreuses données comme la Haute Garonne. Cependant d’autres départements comme le Lot ou l’Aude n’en proposent pas du tout, donc on ne peut pas traiter ces derniers. On a choisit d’afficher quand même les autres départements contenant peu de données cependant les graphiques sont peu instructifs. Les valeurs nulles dans les graphiques correspondent à un manque de donnée.\n\n\n\n Back to top"
  },
  {
    "objectID": "anneeactuelle.html",
    "href": "anneeactuelle.html",
    "title": "Pollution en Occitanie",
    "section": "",
    "text": "Le graphique précédent nous permet d’observer la variation de quantité de chaque polluant en moyenne par mois durant l’année en cours dans chaque département de l’Occitanie. Certains département proposent de nombreuses données comme la Haute Garonne. Cependant d’autres départements comme le Lot ou l’Aude n’en proposent pas du tout, donc on ne peut pas traiter ces derniers. On a choisit d’afficher quand même les autres départements contenant peu de données cependant les graphiques sont peu instructifs. Les valeurs nulles dans les graphiques correspondent à un manque de données.\n\n\n\n Back to top"
  }
]